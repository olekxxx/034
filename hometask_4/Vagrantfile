# The first configuration file: hometask_1

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
  
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.

  config.vm.define "first" do |first|

    first.vm.box = "ubuntu/bionic64"

    #hostname
    first.vm.hostname = "first"
  
    #Greeting
    first.vm.post_up_message = "The FIRST machine is up"

    # Disable automatic box update checking. If you disable this, then
    # boxes will only be checked for updates when the user runs
    # `vagrant box outdated`. This is not recommended.
    first.vm.box_check_update = false

    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine. In the example below,
    # accessing "localhost:8080" will access port 80 on the guest machine.
    # NOTE: This will enable public access to the opened port
    first.vm.network "forwarded_port", guest: 8080, host: 8080

    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine and only allow access
    # via 127.0.0.1 to disable public access
    # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    # config.vm.network "private_network", ip: "192.168.33.10"

    # Create a public network, which generally matched to bridged network.
    # Bridged networks make the machine appear as another physical device on
    # your network.
    # config.vm.network "public_network"

    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    # config.vm.synced_folder "../data", "/vagrant_data"

    # Provider-specific configuration so you can fine-tune various
    # backing providers for Vagrant. These expose provider-specific options.
    # Example for VirtualBox:
    #
    # config.vm.provider "virtualbox" do |vb|
    #   # Display the VirtualBox GUI when booting the machine
    #   vb.gui = true
    #
    #   # Customize the amount of memory on the VM:
    #   vb.memory = "1024"
    # end
    #
    # View the documentation for the provider you are using for more
    # information on available options.

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.

    first.vm.provision "shell", inline: <<-SHELL
       sudo apt-get update
       sudo apt-get -y install \ apt-transport-https \ ca-certificates \ curl \ gnupg-agent \ software-properties-common
       curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
       #sudo apt-key fingerprint 0EBFCD88
       sudo add-apt-repository \ "deb [arch=amd64] https://download.docker.com/linux/ubuntu \ $(lsb_release -cs) \ stable"
       sudo apt-get update
       sudo apt-get -y install docker-ce docker-ce-cli containerd.io
       sudo apt-get -y install mysql-client-core-5.7
       sudo docker pull alexepamcourse/mysql-image:version4
       sudo docker run -e MYSQL_ROOT_PASSWORD=123456 -e MYSQL_USER=wpuser -e MYSQL_PASSWORD=12345 -e MYSQL_DATABASE=wordpress_db --name mysql-cont -d alexepamcourse/mysql-image:version4
       sudo docker exec mysql-cont mysql -u root -e "GRANT ALL PRIVILEGES ON *.* TO 'wpuser'@'%' IDENTIFIED BY '12345' WITH GRANT OPTION;"
       sudo docker pull alexepamcourse/wp-image:version2
       sudo docker run -e WORDPRESS_DB_USER=wpuser -e WORDPRESS_DB_PASSWORD=12345 -e WORDPRESS_DB_NAME=wordpress_db -p 8080:80 -v /root/wordpress/html:/var/www/html --link mysql-cont:mysql --name wp-cont -d alexepamcourse/wp-image:version2 
    SHELL

  end

end
